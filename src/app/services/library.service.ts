import { Injectable } from '@angular/core';

@Injectable({
  providedIn: 'root'
})
export class LibraryService {
  getBooks () {
return [
  {title: 'Accelerate',author: 'Nicole Forsgren, Jez Humble, Gene Kim',
description: "<h2>Velocité et « bande passante »</h2><p><strong>(p13)</strong> « Utiliser la vélocité comme mesure de productivité des équipes a différents effets de bords […] L’équipe s’atèle à compléter un maximum de stories au détriment de la collaboration avec les autres équipes. »</p><p>« Considérer la hausse du taux d’occupation de l’équipe comme directement liée à la hausse de productivité ne fonctionne que jusqu’à un certain point. Au dessus d’un certain niveau, il n’y a plus de capacité ‘tampon’ (ou ‘slack’) pour absorber les imprévus, les changements liés à la planification ou le travail d’amélioration […] Quand l’occupation de l’équipe tend vers 100%, le lead time tend vers l’infini »</p><h2>Processus de développement</h2><p><strong>(p14)</strong> « il y a deux parties au lead time : le temps que cela prend de concevoir et valider un produit/une fonctionnalité (aka « fuzzy front end » / highly variable) et le temps que cela prend de livrer l’élément aux clients (implement + test + deliver / lower variability). On choisit donc de mesurer plutôt la deuxième partie : ‘du code comité au code qui tourne avec succès en production’ »</p><p><strong>(p77)</strong> « les limites WIP (work in progress) ne sont pas utiles si elles ne mènent pas à des améliorations pour accélérer le flux »</p><p><strong>(p217)</strong> « les équipes mentionnant l’absence de process d’approbation des changements ou qui utilisent la « revue de pairs » atteignent un haut niveau de performance de livraison logicielle »</p><h2>Culture</h2><p><strong>(p39)</strong> « Les analyses (suite à un incident) qui s’arrêtent à la détection d’une erreur humaine sont dangereuses. L’erreur humaine devrait, au contraire, constituer le point de départ de l’investigation. Notre objectif doit être d’améliorer le flux d’information pour que chacun dispose de la bonne information au bon moment, ou trouver de meilleurs outils/moyens de prévenir les défaillances importantes »</p><p><strong>(p47)</strong> « En donnant aux développeurs les outils pour détecter les problèmes lorsqu’ils surviennent, le temps et les ressources à investir dans leur développement, et l’autonomie pour résoudre directement ces problèmes, nous créons un environnement dans lequel les développeurs acceptent leur responsabilité concernant la Qualité et la Stabilité de leur produit »</p><p><strong>(p151)</strong> Quelques éléments pour capter la culture d’une équipe (au sens de Westrum) :</p><ul><li>L’information est activement recherchée</li><li>Les messagers délivrant des messages négatifs ou des mauvaises nouvelles ne sont pas punis</li><li>Les responsabilités sont partagées</li><li>La collaboration entre métiers dans l’équipe est encouragée, voire récompensée</li><li>On recherche les causes des échecs/défaillances</li><li>Les nouvelles idées sont bienvenues</li><li>Les échecs sont d’abord considérés comme des opportunités pour améliorer le système</li></ul><h2>Impact/predictability</h2><h3>Continuous delivery</h3><p><strong>(p50)</strong> Toutes ces mesures sont directement corrélées à la performance des livraisons</p><ul><li>% de temps passé en « rework » ou « unplanned work » (p213 high performers : 49% new work / 21% unplanned or rework VS low performers : 38%/27%)</li><li>% temps passé en maintenance de bugs de prod</li><li>Qualité et performance des applications, perçues par ceux qui travaillent dessus</li></ul><h3>Test automation</h3><p><strong>(p53)</strong> Les tests automatisés doivent être fiables et stables pour que les équipes leur fassent confiance. […] Les tests en erreur doivent révéler de réelles défaillances. […] une des façons de garantir cela est d’isoler les tests ‘instables’ dans une ‘suite de tests en quarantaine’ lancée indépendamment</p><h3>Source code management</h3><p><strong>(p55)</strong> Ces pratiques de gestion de code source sont directement corrélées à la performance des livraisons</p><ul><li>Moins de 3 feature branches actives en même temps</li><li>Les branches vivent moins d’une journée</li><li>Pas de période de ‘code freeze’ ou de ‘stabilisation’</li></ul><h3>Architecture</h3><p><strong>(p57)</strong> « l’architecture de l’application peut constituer un obstacle majeur dans l’implémentation de la livraison continue dans l’entreprise »</p><p><strong>(p63)</strong> « L’objectif pour l’architecture est de permettre aux équipes de faire leur travail (du design au déploiement) sans recourir à des communications coûteuses inter-équipes »</p><p><strong>(p67)</strong> « Les architectes doivent se concentrer sur les ingénieurs et leur production, pas sur les outils ou les technologies »</p><h2>Burnout</h2><p><strong>(p96)</strong> « Six facteurs organisationnels qui mènent directement au burnout :</p><ul><li>Surcharge de travail (au-delà des limites humaines)</li><li>Incapacité à influer sur les décisions qui affectent votre travail</li><li>Manque de reconnaissance financière, institutionnelle et/ou sociale</li><li>Environnement de travail sans soutien, manque de communauté</li><li>Injustice/manque de loyauté dans les processus de décision</li><li>Non alignement entre valeurs de l’organisation et valeurs individuelles »</li></ul><p><strong>(p97)</strong> « les managers doivent demander à leurs équipes combien il est difficile de déployer et corriger tout ce qui coûte le plus »</p><h2>Rôle des managers</h2><p><strong>(p123)</strong> Créer les conditions et des opportunités d’apprentissage et d’amélioration</p><ul><li>Encourager les employés à assister à des conférences au moins une fois par an et résumer ce qu’elles ont appris au reste de l’équipe</li><li>Organiser des « hack days » internes</li><li>Tenir régulièrement des mini-conférences internes « DevOps »</li><li>Allouer un temps dédié pour expérimenter de nouveaux outils/technos (20% par ex)</li></ul><p><strong>(p125)</strong> S’appuyer sur des tests ‘disaster recovery’ pour consolider le relationnel entre groupes qui n’ont pas l’habitude de travailler ensemble</p><h2>Organisation</h2><p><strong>(p183/184)</strong> le modèle ING : squads/tribes/chapters (remis en question dans « Team Topologies » avec propositions d’évolutions du modèle)</p><p><strong>(p195)</strong> qui, quoi pour servir la performance globale de l’entreprise ? équipes / managers / leaders</p><p>Il existe un ‘extra book’ (petit) mis à disposition gratuitement par les auteurs contenant des infos intéressantes sur ‘how to transform’, des pistes sûrement ! https://itrevolution.com/product/how-to-transform/</p><p><strong>ACC_HowToTransform.pdf</strong><br>23 Sept 2022, 05:03 pm</p><p>J'en profite également pour vous partager les critères d'évaluation de chacune des 24 capabilities décrites dans le bouquin comme des clés de la performance des entreprises de développement logiciel (slide 20) : https://devopsefficiency.com/list.html</p>",
image: 'books/Accelerate.png',
category: 'Ingénierie logicielle',
avis:'J\'ai apprécié cet ouvrage, principalement pour l\'originalité de son approche. Il est un des rares ouvrages dans lequel les indicateurs d\'efficacité de l\'ingénierie logicielle ne sont pas considérés comme des objectifs mais comme des corollaires découlant directement d\'autres pratiques, comme la mise en place d\'une culture propice adaptée ou des pratiques d\'automatisation vertueuses. Cela permet de se concentrer sur les causes plutôt que sur les conséquences, et de s\'assurer que les efforts d\'amélioration sont bien orientés. C\'est un ouvrage qui m\'a donné envie de creuser davantage dans cette direction.'
  },
  {title: 'Dynamic Reteaming',author: 'Heidi Helfand',
description: "<h1>L'écocycle / cycle adaptatif</h1><p>La base des réflexions et de toute évolution est l’éco-cycle suivant :</p><p>(p18) « commencez là où vous êtes, visualisez la structure actuelle de vos équipes. »</p><p>(p8) Il peut s’appliquer à différents niveaux de « zoom » :</p><ul><li>aux individus</li><li>aux équipes</li><li>aux organisations</li></ul><h2>Les gains</h2><p>(p34) « La réorganisation :</p><ul><li>aide à limiter les silos de connaissance</li><li>réduit le phénomène d’usure des équipes</li><li>fournit des opportunités d’évolution de carrière</li><li>diminue la compétition entre équipes</li><li>rend potentiellement plus facile l’intégration des nouvelles recrues »</li></ul><h2>Les patterns d’évolution</h2><p>(p37) Les 5 principaux modèles d’évolution des équipes sont :</p><ul><li>« 1 by 1 » : arrivée ou départ d’un membre de l’équipe</li><li>« Grow and split » : croissance de l’équipe puis séparation en deux nouvelles équipes</li><li>« Isolation » : création d’une nouvelle équipe isolée pour expérimenter</li><li>« Merging » : fusion de deux équipes</li><li>« Switching » : échanges de membres entre équipes</li></ul><h3>« One by one »</h3><p>Intégration de nombreux nouveaux arrivants</p><p>(p58) L’intégration de nombreux nouveaux arrivants peut se faire suivant un programme d’intégration de type ‘bootcamp’ : on forme une équipe avec les nouveaux arrivants + un « mentor ».</p><p>La période « d’incubation » les fait travailler comme une équipe à part entière, dans laquelle le mentor diffuse les bonnes pratiques et procure la formation et la culture de l’entreprise.</p><p>Cette équipe travaille à la prise en main des outils internes puis sur un véritable projet, où chacun apprend et met en œuvre les attendus de l’entreprise (tests unitaires, qualité de code, intégration continue, revues de code…).</p><p>Une fois cet apprentissage terminé, chacun rejoint son équipe de destination :</p><h3>Pair programming</h3><p>(p61) Le pair programming entre personnes d’équipes différentes permet de tisser des liens personnels au-delà de son équipe et facilite la découverte (et la considération) de ce que font les autres équipes. Cela peut aussi faciliter la mobilité entre équipes. Le management peut aussi ainsi détecter les équipes qui attirent plus ou moins de monde.</p><h3>Accompagner un départ</h3><p>(p61) Un départ (comme l’arrivée) d’un membre dans l’équipe est une évolution de l’équipe à part entière. (p65) On peut, pour accompagner le départ d’un membre de l’équipe, pratiquer un atelier pour aider l’équipe à accepter/mieux vivre ce départ. On y pose les questions suivantes :</p><ul><li>Que faisait cette personne, qui allait au-delà de sa fiche de poste ?</li><li>Qu’apportait-elle/il de particulier dans l’équipe ?</li></ul><p>On peut alors choisir ce que nous souhaitons faire perdurer, en tant qu’équipe et célébrer cette nouvelle page qui s’ouvre.</p><h3>Les écueils du pattern « 1 by 1 »</h3><p>(p67) Si vous ne faites pas attention au niveau des nouveaux arrivants, vous pouvez arriver à un manque d’équilibre entre juniors et seniors.</p><p>Les mentors peuvent aussi se fatiguer de former des juniors.</p><h3>« Grow and split »</h3><p>(p73) nous avons décidé de « splitter », voici comment faire :</p><ul><li>Inclure l’équipe dans la décision</li><li>Diffuser l’idée que « c’est ok » de changer l’équipe</li><li>Créer une culture qui considère comme normal le changement des équipes, que c’est juste un levier supplémentaire dans la poursuite de l’efficacité</li></ul><h3>« Isolation »</h3><p>(p91) « La pattern d’isolation apparait quand vous prenez une équipe, vous la mettez « sur le côté » et vous donnez à ses membres la liberté explicite de travailler autrement. »</p><h2>Les anti-patterns</h2><h3>« Pourcentage » allocation</h3><p>(p141) L’anti pattern « pourcentage » : quand les personnes sont assignées à différents projets/équipes sous forme de pourcentages (10% projet/équipe A, 50% projet/équipe B…)</p><p>(p142) Que faire ? Juste dire « non » ! C’est une compétence de refuser quand quelqu’un essaye de vous surcharger, cela demande du courage mais il faut le faire.</p><h3>Coding alone</h3><p>(p156) Coder seul restreint les possibilités de réorganisation : les « tours de connaissances » (quand quelqu’un est seul à savoir) empêchent toute réorganisation. Plus vous avez de gens qui travaillent seuls, moins il y a de connexions. Sans compter le risque que cela représente (SPOF). Si c’est votre situation, vous pouvez appliquer le pattern d’isolation et inviter dans cette équipe les gens qui veulent travailler avec plus de collaboration. Dans cette équipe, on va pratiquer le pair/mob programming et partager les périmètres. Faites grandir cette équipe en recrutant puis vous pourrez la splitter en deux équipes et avoir ainsi une plus grande « culture de la collaboration » dans l’entreprise.</p><h3>« Cross team people »</h3><p>(p181) Plus vous aurez de personnes partagées entre plusieurs équipes, plus ces personnes auront de réunions et de problématiques de context switching.</p><h2>Se préparer / accompagner</h2><h3>Favoriser le reteaming</h3><p>(p169) Evoquez la culture de ‘transformation des équipes’ / ‘changement d’équipe’ dès la phase de recrutement. Cela facilitera l’acceptation des changements à venir, et le ‘reteaming’ sera bien la norme dans l’entreprise.</p><p>L’entretien des communautés permet aussi de favoriser les échanges et les interactions en dehors du cadre des équipes. Cela contribue aussi à ce que les membres de différentes équipes ne restent pas des étrangers.</p><p>(p221) Pratiquez des rétrospectives multi équipes (en particulier quand il y a de nombreuses dépendances entre elles) en posant la question :</p><p>Comment pourrions nous ajuster nos compositions d’équipe pour atteindre nos objectifs ?</p><h3>Créer une FAQ</h3><p>(p178) Quand vous initiez un reteaming, vous initiez réellement une phase de destruction créative. Il n’y a pas de recette ultime, il est bon de créer une FAQ qui explique votre initiative :</p><ul><li>L’action de créer cette FAQ favorise l’alignement et apporte des clarifications aux personnes concernées</li><li>Les gens veulent savoir pourquoi on initie un changement : si vous ne vous concentrez pas sur le ‘pourquoi’, votre initiative manquera de sens et aura l’air d’un changement imposé sans fondement.</li><li>Expliquer pourquoi est essentiel pour respecter les personnes concernées</li><li>L’impact sur le travail doit être explicité dans la FAQ : fin de vie d’un produit, changement d’architecture…</li><li>Incluez dans la FAQ des liens vers de l’information/des forums sur le reteaming</li></ul><h3>Se situer sur l’écocycle</h3><p>(p154) Si vous soupçonnez une équipe de stagner, que ses membres sont prêts pour un grand changement, utiliser l’écocycle pour voir où ils se situent eux-mêmes.</p><p>Un simple dessin sur un whiteboard et demandez à chacun où il placerait son équipe dans le cycle et pourquoi.</p><p>Dessinez un ecocycle et demandez à chacun de dessiner leur propre ecocycle de leur côté.</p><p>Posez cette question : où se trouve votre équipe dans cet ecocycle ? Comment le savez vous ? Ecrivez cela sur votre ecocycle individuel.</p><p>Mettez en commun deux à deux puis demandez à chaque paire de partager au groupe entier</p><p>Débriefez : quelles sont les perceptions dans l’équipe : sont-elles alignées ?où chacun se place-t-il ? Les membres pensent-ils que l’équipe est dans un « rigidity trap » ? Les membres sont-ils ouverts à l’idée de « destruction créative » ou « réinvention de l’équipe » ?</p><h2>Evaluer les changements</h2><p>(p180) L’impact sur les personnes doit être clair pour chaque personne concernée :</p><ul><li>Quelqu’un change-t-il de titre ? de rôle ? de manager ?</li><li>Quelqu’un obtient il une promotion/augmentation ?</li><li>Y a-t-il besoin de recrutements supplémentaires à cause de ce changement ?</li><li>Quels sont les changements physiques induits ? changement de place, aménagement des bureaux par ex.</li></ul><h3>Visualiser le « avant / après »</h3><p>Créez un visuel du « avant » le changement et conservez en une copie.</p><p>Marquez en couleur chaque changement pour visualiser le « après ».</p><h3>Le plan de communication</h3><p>Vous devez avoir un plan pour bien communiquer, en répondant par ex à ces questions :</p><ul><li>Qui doit savoir quoi ? quand ?</li><li>Comment allez-vous informer les membres de l’équipe concernée ?</li><li>Comment allez-vous informer les personnes qui interagissent avec l’équipe concernée ?</li></ul><p>La structure de votre initiative et la communication sont des éléments essentiels pour réduire les incertitudes, les craintes et la confusion.</p><p>Prévoyez une rétrospective : comment ca s’est passé ? qu’avez-vous appris ?</p><h2>Aidez à la transition</h2><p>(p187) Le travail ne s’arrête pas une fois le changement effectué. Certains personnes peuvent toujours se sentir appartenir à leur ancienne équipe, ceci peut prendre du temps. Certains peuvent ressentir un sentiment de perte/d’abandon, en particulier s’ils ne souhaitaient pas ce changement. Il y a une « zone neutre » entre la fin de l’organisation précédente et le début de la nouvelle : une sorte de « rite de passage ». L’organisation de certaines activités augmente les chances de succès :</p><ul><li>Parlez ouvertement de la fin : au-delà des rumeurs ou des discussions 1-1 avec le manager, il est nécessaire de nommer ouvertement et clairement les choses pour pouvoir avancer.</li><li>Soulignez la fin par un rituel : vous pouvez organiser une rétrospective pour identifier/célébrer les accomplissements et les moments clés de l’équipe en cours de dissolution (cf outil « l’histoire de votre équipe »). Ceci permet à chacun de se rappeler que, malgré la fin de cette équipe, il y a un certain nombre de choses à emporter avec soi dans la nouvelle aventure qui s’ouvre.</li><li>Identifiez ce que vous voulez conserver : identifiez ce que chacun a fait en dehors de son rôle principal dans l’équipe, qui disparait et actez ce que vous voulez continuer/emporter avec vous (X qui apportait le p’tit dej, organisait les quizz etc…) (cf  outil « transition d’équipe)</li><li>Calibrez la nouvelle équipe</li></ul><h2>Outils/ateliers</h2><h3>« Transition d’équipe »</h3><p>Répondez à ces questions individuellement, puis par paires et invitez (sans obligation) chacun à partager cela avec tout le groupe (vous pouvez aussi aborder ces questions en 1/1 avec quelqu’un qui rejoint/quitte une équipe) :</p><ul><li>Que veux-tu abandonner de ton équipe passée pour avancer efficacement vers ta nouvelle équipe ?</li><li>Qu'es-tu content de laisser derrière toi ?</li><li>Qu'est-ce qui va te manquer ?</li><li>Qu'est ce qui est important d’emporter avec toi de ton expérience passée dans ta nouvelle équipe ?</li></ul><p>Invitez quelqu’un à lister les actions à prendre pour avancer en tant que nouvelle équipe. A la fin de cette activité, demandez à chacun d’écrire comment « il sera présent » pour faire avancer cette nouvelle équipe (« pour avancer, vous pouvez compter sur moi pour…. ») puis demandez à chacun de partager aux autres ce qu’il a écrit.</p><h3>« 1,2,4, all » pattern (Liberating structures)</h3><p>(p171) Donnez un budget aux équipes et proposez leur de créer elles-mêmes leur évènement, pour célébrer une release importante par exemple :</p><ul><li>Chaque personne réfléchit et écrit ce que l’équipe pourrait faire</li><li>On discute ensuite par paires des idées de chacun : on choisit une idée à présenter à la prochaine étape</li><li>On sélectionne à nouveau une seule idée, par groupes de 4 personnes</li><li>Chaque groupe partage ensuite à tous sa ‘top’ idée et tout le monde ‘dot vote’ pour choisir la meilleure idée (le nombre de points de vote par personne est défini par : « nb d’idées / 3 » arrondi à l’entier sup)</li></ul><h2>Team Calibration Sessions</h2><p>(p198) La calibration est une phase importante, qui permet à chacun de comprendre l’histoire des équipes, de ce changement, de mieux connaitre les autres membres de cette nouvelle équipe. Ce sont des ateliers au service du « travailler efficacement ensemble ».</p><p>On peut isoler 4 axes de calibration :</p><ul><li>L’histoire : atelier « l’histoire de votre équipe »</li><li>Les individus et leurs rôles : ateliers « le marché des compétences / les expériences phare »</li><li>Le travail (contenu) : atelier « alignement sur le travail »</li><li>Le workflow : atelier « appropriation du workflow »</li></ul><h3>« L’histoire de votre équipe »</h3><p>Créez une timeline vierge (ligne horizontale avec ‘today’ au bout à droite) et informez les participants qu’ils vont construire ensemble l’histoire de leur équipe sur cette timeline</p><p>Chacun peut créer d’anciennes branches qui rejoignent cette ligne suivant leur histoire dans l’entreprise</p><p>Invitez chacun à se situer au niveau de son arrivée dans l’équipe sur cette ligne (physiquement, devant le board) puis à écrire son nom et sa date d’arrivée sur un post-it à placer sur la timeline</p><p>Formez des groupes (de 3 ou 4) en fonction des dates d’arrivée et demandez à chaque groupe d’écrire les moments/livraisons clés qui racontent l’histoire de l’équipe depuis leur arrivée. Demandez leur aussi de lister les départs/arrivées dans l’équipe sur la période et tous les évènements qui importent à leurs yeux (y compris dans l’entreprise, dans le monde etc…)</p><p>Passez en revue l’histoire de l’équipe tous ensemble</p><p>De quoi rêvez-vous pour l’avenir de notre équipe ? A quoi voulez-vous qu’elle ressemble ?</p><p>Puis comment chacun va s’investir en ce sens : « pour avancer, vous pouvez compter sur moi pour…. »</p><p>Cette timeline servira à la cohésion de l’équipe et pour présenter l’équipe aux futurs nouveaux arrivants.</p><h3>« Le marché des compétences »</h3><p>Cette activité permet aux membres de la nouvelle équipe de construire une base commune, comprendre les différences de chacun, respecter les autres.</p><ul><li>7min : Chaque personne écrit :<ul><li>son nom</li><li>son rôle dans l’équipe</li><li>les compétences qu’il apporte dans l’équipe</li><li>ses hobbies et centres d’intérêt</li><li>ce qu’il veut apprendre dans les 3 prochains mois</li><li>ce qu’il peut apprendre à l’équipe</li><li>de quoi il a besoin pour réussir dans son rôle</li></ul></li><li>2min : chacun présente ce qu’il a écrit. Chacun des autres peut alors prendre 1 min pour réagir/compléter cette présentation en complétant avec :<ul><li>D’autres compétences/talents que la personne a et n’a pas mentionnés</li><li>Des réactions si vous partagez des centres d’intérêt, kudos etc…</li><li>Des aides que vous pouvez apporter à cette personne pour réussir dans son rôle</li></ul></li><li>Débrief avec tout le groupe<ul><li>Qu’est ce qui vous a surpris ?</li><li>Qu’avez-vous découvert que vous avez en commun ?</li><li>Qu’avez-vous appris sur votre équipe ?</li><li>Basé sur ce que vous avez appris de vos collègues, que voulez-vous faire maintenant ?</li></ul></li></ul><h3>« Les expériences phare »</h3><p>(p204) Cette activité peut se faire dans un cadre informel : salle de pause, balade en forêt, marche sans objectif particulier par ex…</p><p>Chaque personne trouve un partenaire pour l’activité, de préférence quelqu’un qu’elle ne connait pas très bien. Si l’équipe ne montre pas d’intérêt à pratiquer cette activité, on ne le fait pas. La règle est, en général pour les ateliers, d’inviter, pas de forcer.</p><p>Chacun va devoir raconter une expérience importante vécue dans sa vie (un apprentissage clé, une réalisation importante, un challenge relevé…)</p><p>Chacun doit savoir qu’il sera en charge de résumer ensuite le récit de son partenaire.</p><p>Après 10 minutes, inversez les rôles.</p><p>Ensuite, regroupez vous en équipe et demandez à chacun de raconter l’expérience « phare » de son binôme.</p><p>Demandez ensuite au groupe les « valeurs » qui sont présentes dans l’histoire qu’ils viennent d’entendre et listez les par écrit.</p><p>Une fois tous les récits écoutés, passez en revue la liste complète des valeurs notées : ce sont les valeurs présentes dans cette équipe.</p><p>Placez par ordre de fréquence (les plus représentées dans les récits d’abord…)</p><p>Demandez à l’équipe si elle veut adopter ces valeurs (top N de la liste) comme « les valeurs de l’équipe »</p><h3>« Alignement sur le travail »</h3><p>(p206) Répondez en équipe à ces questions et partagez les réponses sur un espace accessible à tous.</p><ul><li>Quelle est la mission de notre équipe ?<ul><li>Quels sont les résultats que nous devons produire pour accomplir cette mission ?</li><li>Qui sont les membres de l’équipe et leur rôle ?</li></ul></li><li>Quels sont les principaux sujets sur lesquels travaille l’équipe ?<ul><li>Top 3 priorités</li><li>Il est important ici de rendre visible ce qui est fait « dans l’ombre » et doit être priorisé</li></ul></li><li>Quels sont les codes et outils, maintenus par votre équipe / dont l’équipe est propriétaire ?<ul><li>Comment équilibrons nous la maintenance / les actions « techniques » avec le travail « orienté produit » ?</li></ul></li><li>Comment est priorisé notre travail et à qui appartient cette prise de décision ?</li><li>Comment allons-nous communiquer sur le statut de notre travail en dehors de l’équipe ?</li></ul><h3>« Appropriation du workflow »</h3><p>Prévoir 2-3h.</p><p>Chacun liste de son côté les points d’entrée du travail dans l‘équipe (le but étant de savoir comment gérer les différents points d’entrée et savoir qui décide de l’entrée ou non des différents éléments dans le workflow de l’équipe)</p><p>Lister tous ensemble les étapes par lesquelles chaque tâche doit passer pour être considérée comme terminée ou livrée au client.</p><p>Pour chaque étape, répondre à la question : « pour qu’une tâche soit en <IN PROGRESS>, qu’est ce qui doit être vrai ? »</p><p>On peut utiliser le « poll for agreement » dans cet atelier :</p><ul><li>Pour une proposition, chacun vote avec sa main :<ul><li>1 : je ne soutiens pas cette idée</li><li>2 : j\’ai besoin de clarifications sur … avant de soutenir ou non cette idée</li><li>3 : je n’ai pas trop d’avis, je délègue à l’équipe</li><li>4 : je soutiens cette idée</li><li>5 : je soutiens largement cette idée</li></ul></li></ul><p>On peut ensuite se baser sur ces éléments du workflow de l\’équipe pour :</p><ul><li>Réduire les délais, temps passés dans chaque étape</li><li>Stabiliser les temps de cycle</li><li>Réduire les limites du WIP</li><li>Améliorer le workflow</li></ul><h3>« WhiteBoard reteaming » / « Marketplace »</h3><p>Ces deux outils sont détaillés en annexes. Ils proposent un support interactif pour que chacun puisse se positionner librement dans l’organisation, choisir sa nouvelle équipe dans le cadre des changements à venir.</p><p>Ce sont aussi des supports de communication sur les évolutions à venir.</p><h2>Further readings</h2><p>L’auteur a écrit un article abordant certains aspects sur Medium :</p><ul><li>De nombreuses références à « Liberating structures » :</li><li>« Actionable Agile Metrics for predictability : an introduction » by Daniel S. Vacanti 2015</li><li>« When will it be done ? Lean-Agile forecasting to answer your customer’s most important question » by Daniel S. Vacanti 2020</li><li>« actionableagile.com with Jira : rapports, indicateurs, stabilité du temps de cycle… »</li></ul>",
image: 'books/Dynamic Reteaming.png',
category: 'Management / organisation',
avis:'Très bon livre plein d\'ingrédients concrets pour accompagner les aspects humains des changements dans les organisations, donnant de nombreux outils pour servir les disruptions et les réorganisations qui sont nécessaires pour conserver un certain dynamisme dans l\'entreprise.'
  },
  {title: 'Team Topologies',author: 'Matthew Skelton, Manuel Pais, Ruth Malan',description: '',image: 'books/Team Topologies.png',category: 'Management / organisation',avis:''
  },
  {title: 'Scrum Guide',author: 'Ken Schwaber, Jeff Sutherland',description: '',image: 'books/scrum_guide.png',category: 'Ingénierie logicielle',avis:''
  },
  {title: 'Refactoring',author: 'Martin Fowler',description: '',image: 'books/Refactoring.png',category: 'Ingénierie logicielle',avis:''
  },
  {title: 'Measure what matters',author: 'John Doerr',description: '',image: 'books/Measure What Matters.png',category: 'Ingénierie logicielle',avis:''
  },
  {title: 'Management 3.0',author: 'Jurgen Appelo',description: '',image: 'books/Management 3.0.png',category: 'Management / organisation',avis:''
  },
  {title: 'L\'entreprise libérée',author: 'Isaac Getz',description: '',image: 'books/L\'Entreprise libérée.png',category: 'Management / organisation',avis:''
  },
  {title: 'How to change the world',author: 'Jurgen Appelo',description: '',image: 'books/How to Change the World.png',category: 'Management / organisation',avis:''
  }
]
  }


  constructor() { }
}
